/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
var grid = [];
var width = 720;
var height = 480;
var grid_width = 10;
var grid_height = 10;
for (var x = 0; x < width / grid_width; x++) {
    var temp_array = [];
    for (var y = 0; y < height / grid_height; y++) {
        temp_array.push(false);
    }
    grid.push(temp_array);
}
function updateGol(grid) {
    var newgrid = [];
    for (var x = 0; x < width / grid_width; x++) {
        var temp_array = [];
        for (var y = 0; y < height / grid_height; y++) {
            var total = 0;
            total += grid[x - 1][y + 1] ? 1 : 0;
            total += grid[x - 1][y - 1] ? 1 : 0;
            total += grid[x - 1][y] ? 1 : 0;
            total += grid[x + 1][y + 1] ? 1 : 0;
            total += grid[x + 1][y - 1] ? 1 : 0;
            total += grid[x + 1][y] ? 1 : 0;
            total += grid[x][y + 1] ? 1 : 0;
            total += grid[x][y - 1] ? 1 : 0;
            if (grid[x][y] && (total == 2 || total == 3)) {
                temp_array.push(true);
            }
            else if (!grid[x][y] && (total == 3)) {
                temp_array.push(true);
            }
            else {
                temp_array.push(false);
            }
        }
        newgrid.push(temp_array);
    }
    return newgrid;
}


/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7O1VBQUE7VUFDQTs7Ozs7V0NEQTtXQUNBO1dBQ0E7V0FDQSx1REFBdUQsaUJBQWlCO1dBQ3hFO1dBQ0EsZ0RBQWdELGFBQWE7V0FDN0Q7Ozs7Ozs7OztBQ09BLElBQUksSUFBSSxHQUFXLEVBQUUsQ0FBQztBQUN0QixJQUFJLEtBQUssR0FBRyxHQUFHLENBQUM7QUFDaEIsSUFBSSxNQUFNLEdBQUcsR0FBRztBQUNoQixJQUFJLFVBQVUsR0FBRyxFQUFFLENBQUM7QUFDcEIsSUFBSSxXQUFXLEdBQUcsRUFBRSxDQUFDO0FBQ3JCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLEdBQUcsVUFBVSxFQUFFLENBQUMsRUFBRSxFQUFFO0lBQzNDLElBQUksVUFBVSxHQUFZLEVBQUUsQ0FBQztJQUM3QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxHQUFHLFdBQVcsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUM3QyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztLQUN2QjtJQUNELElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO0NBQ3RCO0FBQ0QsU0FBUyxTQUFTLENBQUMsSUFBWTtJQUM3QixJQUFJLE9BQU8sR0FBUyxFQUFFLENBQUM7SUFHdkIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssR0FBRyxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDM0MsSUFBSSxVQUFVLEdBQVksRUFBRSxDQUFDO1FBQzdCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLEdBQUcsV0FBVyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzdDLElBQUksS0FBSyxHQUFXLENBQUMsQ0FBQztZQUN0QixLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNuQyxLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNuQyxLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9CLEtBQUssSUFBSSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25DLEtBQUssSUFBSSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ25DLEtBQUssSUFBSSxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDL0IsS0FBSyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMvQixLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9CLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDLEVBQUU7Z0JBQzVDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO2FBQ3RCO2lCQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLEVBQUU7Z0JBQ3BDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO2FBQ3RCO2lCQUFNO2dCQUNMLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO2FBQ3ZCO1NBQ0Y7UUFDRCxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztLQUN6QjtJQUNELE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZmdqMjAyMy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9tZmdqMjAyMy93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL21mZ2oyMDIzLy4vc3JjL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCIvLyBpbXBvcnQgKiBhcyBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgKiBhcyBQSVhJIGZyb20gJ3BpeGkuanMnO1xuXG4vLyBmdW5jdGlvbiBjb21wb25lbnQoKSB7XG4vLyAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuLy8gICAgIC8vIExvZGFzaCwgbm93IGltcG9ydGVkIGJ5IHRoaXMgc2NyaXB0XG4vLyAgICAgZWxlbWVudC5pbm5lckhUTUwgPSBfLmpvaW4oWydIZWxsbycsICd3ZWJwYWNrJ10sICcgJyk7XG5cbi8vICAgICByZXR1cm4gZWxlbWVudDtcbi8vICAgfVxuXG4vLyAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY29tcG9uZW50KCkpO1xudHlwZSBib29sMmQgPSBib29sZWFuW11bXTtcbmxldCBncmlkOiBib29sMmQgPSBbXTtcbmxldCB3aWR0aCA9IDcyMDtcbmxldCBoZWlnaHQgPSA0ODBcbmxldCBncmlkX3dpZHRoID0gMTA7XG5sZXQgZ3JpZF9oZWlnaHQgPSAxMDtcbmZvciAobGV0IHggPSAwOyB4IDwgd2lkdGggLyBncmlkX3dpZHRoOyB4KyspIHtcbiAgbGV0IHRlbXBfYXJyYXk6IGJvb2xlYW5bXT1bXTtcbiAgZm9yIChsZXQgeSA9IDA7IHkgPCBoZWlnaHQgLyBncmlkX2hlaWdodDsgeSsrKSB7XG4gICAgdGVtcF9hcnJheS5wdXNoKGZhbHNlKVxuICB9XG4gIGdyaWQucHVzaCh0ZW1wX2FycmF5KVxufVxuZnVuY3Rpb24gdXBkYXRlR29sKGdyaWQ6IGJvb2wyZCk6IGJvb2wyZCB7XG4gIGxldCBuZXdncmlkOiBib29sMmQ9W107XG5cblxuICBmb3IgKGxldCB4ID0gMDsgeCA8IHdpZHRoIC8gZ3JpZF93aWR0aDsgeCsrKSB7XG4gICAgbGV0IHRlbXBfYXJyYXk6IGJvb2xlYW5bXT1bXTtcbiAgICBmb3IgKGxldCB5ID0gMDsgeSA8IGhlaWdodCAvIGdyaWRfaGVpZ2h0OyB5KyspIHtcbiAgICAgIGxldCB0b3RhbDogbnVtYmVyID0gMDtcbiAgICAgIHRvdGFsICs9IGdyaWRbeCAtIDFdW3kgKyAxXSA/IDEgOiAwXG4gICAgICB0b3RhbCArPSBncmlkW3ggLSAxXVt5IC0gMV0gPyAxIDogMFxuICAgICAgdG90YWwgKz0gZ3JpZFt4IC0gMV1beV0gPyAxIDogMFxuICAgICAgdG90YWwgKz0gZ3JpZFt4ICsgMV1beSArIDFdID8gMSA6IDBcbiAgICAgIHRvdGFsICs9IGdyaWRbeCArIDFdW3kgLSAxXSA/IDEgOiAwXG4gICAgICB0b3RhbCArPSBncmlkW3ggKyAxXVt5XSA/IDEgOiAwXG4gICAgICB0b3RhbCArPSBncmlkW3hdW3kgKyAxXSA/IDEgOiAwXG4gICAgICB0b3RhbCArPSBncmlkW3hdW3kgLSAxXSA/IDEgOiAwXG4gICAgICBpZiAoZ3JpZFt4XVt5XSAmJiAodG90YWwgPT0gMiB8fCB0b3RhbCA9PSAzKSkge1xuICAgICAgICB0ZW1wX2FycmF5LnB1c2godHJ1ZSlcbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKCFncmlkW3hdW3ldICYmICh0b3RhbCA9PSAzKSkge1xuICAgICAgICB0ZW1wX2FycmF5LnB1c2godHJ1ZSlcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRlbXBfYXJyYXkucHVzaChmYWxzZSlcbiAgICAgIH1cbiAgICB9XG4gICAgbmV3Z3JpZC5wdXNoKHRlbXBfYXJyYXkpXG4gIH1cbiAgcmV0dXJuIG5ld2dyaWQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=